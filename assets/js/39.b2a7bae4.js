(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{233:function(e,t,n){"use strict";n.r(t);n(170);var a=n(173),i=n(174),d=n(229),s=n(119),o=n(202),c=n(230);if(window){var l=function(e){function t(){var e;return Object(a.a)(this,t),(e=Object(d.a)(this,Object(s.a)(t).call(this))).pad=function(e){return navigator.getGamepads()[e]},e.polling=null,e}return Object(o.a)(t,e),Object(i.a)(t,[{key:"_filter",value:function(e){for(var t=[],n=0;n<e.length;n++)null!==e[n]&&t.push(!0);return t.length}},{key:"_checkButtons",value:function(){var e=this.pad(0).axes[9],t=e>.7&&e<.8?"prev":null,n=e<.4&&e<.5?"next":null;(t||n)&&this.dispatchEvent(new CustomEvent("button",{bubbles:!0,composed:!0,detail:{button:t||n}}))}},{key:"removePad",value:function(){var e=this;window.addEventListener("gamepaddisconnected",function(t){console.log("Gamepad disconnected from index %d: %s",t.gamepad.index,t.gamepad.id),e.removeAttribute("connected"),e.removeAttribute("devices"),clearInterval(e.polling)})}},{key:"setPad",value:function(){this.setAttribute("connected",!0),this.setAttribute("devices",this._filter(navigator.getGamepads())),this.polling=setInterval(this._checkButtons.bind(this),100)}},{key:"detectPad",value:function(){var e=this;window.addEventListener("gamepadconnected",function(t){console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",t.gamepad.index,t.gamepad.id,t.gamepad.buttons.length,t.gamepad.axes.length),e.setPad()})}},{key:"connectedCallback",value:function(){this._filter(navigator.getGamepads())&&this.setPad(),this.detectPad(),this.removePad()}}]),t}(Object(c.a)(HTMLElement));customElements.define("gamepad-api",l)}}}]);